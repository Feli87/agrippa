import { readFile } from 'fs/promises';
import { join } from 'path';
import fg from 'fast-glob';

/** 
 * A simple representation of a file as a combination of a path and content.
 * This is modelled for code files that are part of a component generated by Agrippa; 
 * particularily, the `path` param is relative to the, `basePath`, 
 * i.e. the directory in which the component was generated.
 * 
 * Both the file's absolute path and its path realtive to the `results` folder
 */
export interface CodeFile {
  /** **normalized** file path relative to the base folder of the corresponding component. */
  path: string;
  content: string;
}

export const codeFile = async (basePath: string, path: string): Promise<CodeFile> => {
  const absolutePath = join(basePath, path);

  const content = await readFile(absolutePath, 'utf-8');
  return { path, content };
};

export const scanCodeFiles = async (basePath: string): Promise<CodeFile[]> => {
  const entries = await fg('**/*', {
    objectMode: true,
    cwd: basePath
  });

  const files = await Promise.all(
    entries
      .map(({ path }) => codeFile(basePath, path))
  );

  return files;
};
